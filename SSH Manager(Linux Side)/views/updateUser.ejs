<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="/static/css/update-form.css" />
<script src="/static/js/bundle.js"></script>
<script src="/static/js/rsa.js"></script>
<script src="/static/js/regex.js"></script>
</head>
<body>
	<div class="container">
		<form action="">
			<div class="row">
		    	
		      <div class="col-25">
		      	<h2>Update User</h2>
		        <label>Username:<b><%= user.username %></b></label>
		      </div>
		    </div>
		    <input type="hidden" id="txtId" name="id" value = "<%= user.id %>">
		    <div class="row">

		      <div class="col-25">
		        <label for="fname">First Name</label>
		      </div>
		      <div class="col-75">
		        <input type="text" id="txtFirstname" name="firstname" value = "<%= user.firstname %>">
		      </div>
		    </div>
		    <div class="row">
		      <div class="col-25">
		        <label for="lname">Last Name</label>
		      </div>
		      <div class="col-75">
		        <input type="text" id="txtLastname" name="lastname" value = "<%= user.lastname %>">
		      </div>
		    </div>
		    <div class="row">
		      <div class="col-25">
		        <label for="country">Email</label>
		      </div>
		      <div class="col-75">
		        <input type="text" id="txtEmail" name="email" value = "<%= user.email %>">
		      </div>
		    </div>
		    <div class="row">
		      <div class="col-25">
		        <label for="subject">Description</label>
		      </div>
		      <div class="col-75">
		        <textarea id="txtDescription" name="description" style="height:200px"><%= user.description %></textarea>
		      </div>
		    </div>
		    <div class="row">
		      <div class="col-25">
		        <label id = "lblError" style="color:red"></label>
		      </div>
		  	</div>
		    <div class="row">
		      <input type="submit" value="Update" id="btnSubmit">
		    </div>
		  </form>
	  </div>
	  <script type="text/javascript">
	  	var node_crypto = require('crypto');
	    var Buffer = require('safer-buffer').Buffer;
	    var nodeRSA = require('node-rsa');

	    const clientRSA = generateRSA();
	    const clientPublicKey = clientRSA.exportKey('pkcs1-public-pem');
	    const clientPrivateKey = clientRSA.exportKey('pkcs1-private-pem');
	  	document.getElementById('btnSubmit')
            .addEventListener('click', (e) => {
                e.preventDefault();

                var id = document.getElementById('txtId').value;
                var firstname = document.getElementById('txtFirstname').value;
                var lastname = document.getElementById('txtLastname').value;
                var email = document.getElementById('txtEmail').value;
                var description = document.getElementById('txtDescription').value;

                document.getElementById('lblError').innerHTML = "";

                var JSONString = JSON.stringify({
                    query:{
                        id,firstname,lastname,email,description
                    },
                    publicKey:clientPublicKey
                });
                
                (async () => {
                    var encryptedData = await encryptRSAToBufferArray(JSONString);
                    var response = await fetch('', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({encrypted:encryptedData}),
                    })
                    .then((res) => {
                        return res.json();
                    })
                    if(response.status === 'failed'){
                        alert(response.message);
                    }
                    var bufferJSONArray = JSON.parse(response.encrypted);

                    var bufferArray = [];
                    for(i = 0;i<bufferJSONArray.length;i++){
                        bufferArray.push(new Buffer.from(bufferJSONArray[i]));
                    }
                    console.log(bufferJSONArray);
                    console.log(bufferArray);

                    var decryptedJSON = JSON.parse(decryptRSAFromBufferArray(bufferArray,clientPrivateKey));
                    console.log(decryptedJSON);
                    
                    if(decryptedJSON.status === 'succeeded'){
                        alert(decryptedJSON.message);
                        window.location.replace("/admin");
                    }else{
                        document.getElementById('lblError').innerHTML = decryptedJSON.message;
                    }
                })();
                
            });
	  </script>
</body>
<html>